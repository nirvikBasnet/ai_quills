// Generated by Dagger (https://dagger.dev).
package com.nirviklabs.aiquills.di;

import com.nirviklabs.aiquills.token.TokenDao;
import com.nirviklabs.aiquills.token.TokenRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideTokenRepositoryFactory implements Factory<TokenRepository> {
  private final Provider<TokenDao> tokenDaoProvider;

  public AppModule_ProvideTokenRepositoryFactory(Provider<TokenDao> tokenDaoProvider) {
    this.tokenDaoProvider = tokenDaoProvider;
  }

  @Override
  public TokenRepository get() {
    return provideTokenRepository(tokenDaoProvider.get());
  }

  public static AppModule_ProvideTokenRepositoryFactory create(
      Provider<TokenDao> tokenDaoProvider) {
    return new AppModule_ProvideTokenRepositoryFactory(tokenDaoProvider);
  }

  public static TokenRepository provideTokenRepository(TokenDao tokenDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideTokenRepository(tokenDao));
  }
}
