// Generated by Dagger (https://dagger.dev).
package com.nirviklabs.aiquills.di;

import com.nirviklabs.aiquills.token.AppDatabase;
import com.nirviklabs.aiquills.token.TokenDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideTokenDaoFactory implements Factory<TokenDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public AppModule_ProvideTokenDaoFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public TokenDao get() {
    return provideTokenDao(appDatabaseProvider.get());
  }

  public static AppModule_ProvideTokenDaoFactory create(Provider<AppDatabase> appDatabaseProvider) {
    return new AppModule_ProvideTokenDaoFactory(appDatabaseProvider);
  }

  public static TokenDao provideTokenDao(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideTokenDao(appDatabase));
  }
}
